# -*- coding: utf-8 -*-
"""ART.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AzRaHO_jZSsHJO89NqL6hJZndiEnYl8G
"""

import tensorflow as tf 
import numpy as np 
X = np.array([ 
    [0, 1, 1], 
    [1, 0, 1], 
    [1, 1, 0], 
    [0, 0, 1], 
    [0, 1, 0], 
    [1, 0, 0], 
    [0, 0, 0], 
    [1, 1, 1], 
]) 
y = np.array([0, 1, 2, 0, 2, 1, 0, 2]) 
inputs = tf.keras.Input(shape=(3,)) 
prototype_layer = tf.keras.layers.Dense(3) 
comparator_layer = tf.keras.layers.Dense(3, activation='sigmoid') 
prototype = prototype_layer(inputs) 
comparator = comparator_layer(inputs) 
match_layer = tf.keras.layers.Dot(axes=(1,1))([prototype, comparator]) 
match_layer = tf.keras.layers.Lambda(lambda x: x / 3.0)(match_layer) 
mask_layer = tf.keras.layers.Lambda(lambda x: tf.one_hot(tf.argmax(x), 3))(match_layer) 
output_layer = tf.keras.layers.Dense(3, activation='softmax') 
output = output_layer(prototype * mask_layer) 
 
model = tf.keras.Model(inputs=inputs, outputs=output) 
model.compile(optimizer='adam', loss='sparse_categorical_crossentropy') 
model.fit(X, y, epochs=100) 
X_test = np.array([ 
    [1, 1, 1], 
    [0, 0, 0], 
    [1, 0, 1], 
]) 
ans = model.predict(X_test)
print(ans)
y_pred = np.argmax(model.predict(X_test), axis=1) 
 
print(y_pred)

